{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/smb/ZkSyncSwap/pancake-swap-interface-v1/src/pages/Swap/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { JSBI, Token } from '@pancakeswap-libs/sdk';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { ArrowDown } from 'react-feather';\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text } from '@pancakeswap-libs/uikit';\nimport { ThemeContext } from 'styled-components';\nimport AddressInputPanel from 'components/AddressInputPanel';\nimport Card, { GreyCard } from 'components/Card';\nimport { AutoColumn } from 'components/Column';\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal';\nimport CurrencyInputPanel from 'components/CurrencyInputPanel';\nimport CardNav from 'components/CardNav';\nimport { AutoRow, RowBetween } from 'components/Row';\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown';\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee';\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds';\nimport TradePrice from 'components/swap/TradePrice';\nimport TokenWarningModal from 'components/TokenWarningModal';\nimport SyrupWarningModal from 'components/SyrupWarningModal';\nimport SafeMoonWarningModal from 'components/SafeMoonWarningModal';\nimport ProgressSteps from 'components/ProgressSteps';\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index';\nimport { useActiveWeb3React } from 'hooks';\nimport { useCurrency } from 'hooks/Tokens';\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback';\nimport { useSwapCallback } from 'hooks/useSwapCallback';\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback';\nimport { Field } from 'state/swap/actions';\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks';\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks';\nimport { LinkStyledButton } from 'components/Shared';\nimport { maxAmountSpend } from 'utils/maxAmountSpend';\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices';\nimport Loader from 'components/Loader';\nimport useI18n from 'hooks/useI18n';\nimport PageHeader from 'components/PageHeader';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport AppBody from '../AppBody';\n\nconst Swap = () => {\n  _s();\n\n  var _parsedAmounts$indepe, _parsedAmounts$indepe2, _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$indepe3, _parsedAmounts$Field$, _currencies$Field$INP;\n\n  const loadedUrlParams = useDefaultsFromURLSearch();\n  const TranslateString = useI18n(); // token warning stuff\n\n  const [loadedInputCurrency, loadedOutputCurrency] = [useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.inputCurrencyId), useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.outputCurrencyId)];\n  const [dismissTokenWarning, setDismissTokenWarning] = useState(false);\n  const [transactionWarning, setTransactionWarning] = useState({\n    selectedToken: null,\n    purchaseType: null\n  });\n  const urlLoadedTokens = useMemo(() => {\n    var _filter, _ref;\n\n    return (_filter = (_ref = [loadedInputCurrency, loadedOutputCurrency]) === null || _ref === void 0 ? void 0 : _ref.filter(c => c instanceof Token)) !== null && _filter !== void 0 ? _filter : [];\n  }, [loadedInputCurrency, loadedOutputCurrency]);\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true);\n  }, []);\n\n  const handleConfirmWarning = () => {\n    setTransactionWarning({\n      selectedToken: null,\n      purchaseType: null\n    });\n  };\n\n  const {\n    account,\n    library\n  } = useActiveWeb3React(); // const provider = library?.getSigner()\n  // const CONTRACT_ADDRESS = '0xcF7140F19f38899b8A26Beeafc152D10D03af397' // masterchef contract\n  // const abict = [\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"string\",\n  //         \"name\": \"name_\",\n  //         \"type\": \"string\"\n  //       },\n  //       {\n  //         \"internalType\": \"string\",\n  //         \"name\": \"symbol_\",\n  //         \"type\": \"string\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"nonpayable\",\n  //     \"type\": \"constructor\"\n  //   },\n  //   {\n  //     \"anonymous\": false,\n  //     \"inputs\": [\n  //       {\n  //         \"indexed\": true,\n  //         \"internalType\": \"address\",\n  //         \"name\": \"owner\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"indexed\": true,\n  //         \"internalType\": \"address\",\n  //         \"name\": \"spender\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"indexed\": false,\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"value\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"Approval\",\n  //     \"type\": \"event\"\n  //   },\n  //   {\n  //     \"anonymous\": false,\n  //     \"inputs\": [\n  //       {\n  //         \"indexed\": true,\n  //         \"internalType\": \"address\",\n  //         \"name\": \"from\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"indexed\": true,\n  //         \"internalType\": \"address\",\n  //         \"name\": \"to\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"indexed\": false,\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"value\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"Transfer\",\n  //     \"type\": \"event\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"owner\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"spender\",\n  //         \"type\": \"address\"\n  //       }\n  //     ],\n  //     \"name\": \"allowance\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"view\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"spender\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"amount\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"approve\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"bool\",\n  //         \"name\": \"\",\n  //         \"type\": \"bool\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"nonpayable\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"account\",\n  //         \"type\": \"address\"\n  //       }\n  //     ],\n  //     \"name\": \"balanceOf\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"view\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [],\n  //     \"name\": \"decimals\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"uint8\",\n  //         \"name\": \"\",\n  //         \"type\": \"uint8\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"view\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"spender\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"subtractedValue\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"decreaseAllowance\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"bool\",\n  //         \"name\": \"\",\n  //         \"type\": \"bool\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"nonpayable\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"spender\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"addedValue\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"increaseAllowance\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"bool\",\n  //         \"name\": \"\",\n  //         \"type\": \"bool\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"nonpayable\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [],\n  //     \"name\": \"name\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"string\",\n  //         \"name\": \"\",\n  //         \"type\": \"string\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"view\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [],\n  //     \"name\": \"symbol\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"string\",\n  //         \"name\": \"\",\n  //         \"type\": \"string\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"view\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [],\n  //     \"name\": \"totalSupply\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"view\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"to\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"amount\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"transfer\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"bool\",\n  //         \"name\": \"\",\n  //         \"type\": \"bool\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"nonpayable\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"from\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"to\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"amount\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"transferFrom\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"bool\",\n  //         \"name\": \"\",\n  //         \"type\": \"bool\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"nonpayable\",\n  //     \"type\": \"function\"\n  //   }\n  // ]\n  // const contract_masterchef = new Contract(CONTRACT_ADDRESS, abict, provider)\n  // console.log(contract_masterchef.balanceOf(\"0x47e6d0DFA00637F35528ff28d371D6263f73B334\"))\n\n  const theme = useContext(ThemeContext);\n  const [isExpertMode] = useExpertModeManager(); // get custom setting values for user\n\n  const [deadline] = useUserDeadline();\n  const [allowedSlippage] = useUserSlippageTolerance(); // swap state\n\n  const {\n    independentField,\n    typedValue,\n    recipient\n  } = useSwapState();\n  const {\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError\n  } = useDerivedSwapInfo();\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue);\n  const showWrap = wrapType !== WrapType.NOT_APPLICABLE;\n  const trade = showWrap ? undefined : v2Trade;\n  const parsedAmounts = showWrap ? {\n    [Field.INPUT]: parsedAmount,\n    [Field.OUTPUT]: parsedAmount\n  } : {\n    [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.inputAmount,\n    [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.outputAmount\n  };\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient\n  } = useSwapActionHandlers();\n  const isValid = !swapInputError;\n  const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  const handleTypeInput = useCallback(value => {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  const handleTypeOutput = useCallback(value => {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]); // modal and loading\n\n  const [{\n    showConfirm,\n    tradeToConfirm,\n    swapErrorMessage,\n    attemptingTxn,\n    txHash\n  }, setSwapState] = useState({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  });\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap ? (_parsedAmounts$indepe = (_parsedAmounts$indepe2 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe2 === void 0 ? void 0 : _parsedAmounts$indepe2.toExact()) !== null && _parsedAmounts$indepe !== void 0 ? _parsedAmounts$indepe : '' : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  };\n  const route = trade === null || trade === void 0 ? void 0 : trade.route;\n  const userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && ((_parsedAmounts$indepe3 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe3 === void 0 ? void 0 : _parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));\n  const noRoute = !route; // check whether the user has approved the router on the input token\n\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage); // check if user has gone through approval process, used to show two step buttons, reset on token change\n\n  const [approvalSubmitted, setApprovalSubmitted] = useState(false); // mark when a user has submitted an approval, reset onTokenSelection for input field\n\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n  const maxAmountInput = maxAmountSpend(currencyBalances[Field.INPUT]);\n  const atMaxAmountInput = Boolean(maxAmountInput && ((_parsedAmounts$Field$ = parsedAmounts[Field.INPUT]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.equalTo(maxAmountInput))); // the callback to execute the swap\n\n  const {\n    callback: swapCallback,\n    error: swapCallbackError\n  } = useSwapCallback(trade, allowedSlippage, deadline, recipient);\n  const {\n    priceImpactWithoutFee\n  } = computeTradePriceBreakdown(trade);\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return;\n    }\n\n    if (!swapCallback) {\n      return;\n    }\n\n    setSwapState(prevState => ({ ...prevState,\n      attemptingTxn: true,\n      swapErrorMessage: undefined,\n      txHash: undefined\n    }));\n    swapCallback().then(hash => {\n      setSwapState(prevState => ({ ...prevState,\n        attemptingTxn: false,\n        swapErrorMessage: undefined,\n        txHash: hash\n      }));\n    }).catch(error => {\n      setSwapState(prevState => ({ ...prevState,\n        attemptingTxn: false,\n        swapErrorMessage: error.message,\n        txHash: undefined\n      }));\n    });\n  }, [priceImpactWithoutFee, swapCallback, setSwapState]); // errors\n\n  const [showInverted, setShowInverted] = useState(false); // warnings on slippage\n\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee); // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n\n  const showApproveFlow = !swapInputError && (approval === ApprovalState.NOT_APPROVED || approval === ApprovalState.PENDING || approvalSubmitted && approval === ApprovalState.APPROVED) && !(priceImpactSeverity > 3 && !isExpertMode);\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState(prevState => ({ ...prevState,\n      showConfirm: false\n    })); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [onUserInput, txHash, setSwapState]);\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState(prevState => ({ ...prevState,\n      tradeToConfirm: trade\n    }));\n  }, [trade]); // This will check to see if the user has selected Syrup or SafeMoon to either buy or sell.\n  // If so, they will be alerted with a warning message.\n\n  const checkForWarning = useCallback((selected, purchaseType) => {\n    if (['SYRUP', 'SAFEMOON'].includes(selected)) {\n      setTransactionWarning({\n        selectedToken: selected,\n        purchaseType\n      });\n    }\n  }, [setTransactionWarning]);\n  const handleInputSelect = useCallback(inputCurrency => {\n    setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n    onCurrencySelection(Field.INPUT, inputCurrency);\n\n    if (inputCurrency.symbol === 'SYRUP') {\n      checkForWarning(inputCurrency.symbol, 'Selling');\n    }\n\n    if (inputCurrency.symbol === 'SAFEMOON') {\n      checkForWarning(inputCurrency.symbol, 'Selling');\n    }\n  }, [onCurrencySelection, setApprovalSubmitted, checkForWarning]);\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact());\n    }\n  }, [maxAmountInput, onUserInput]);\n  const handleOutputSelect = useCallback(outputCurrency => {\n    onCurrencySelection(Field.OUTPUT, outputCurrency);\n\n    if (outputCurrency.symbol === 'SYRUP') {\n      checkForWarning(outputCurrency.symbol, 'Buying');\n    }\n\n    if (outputCurrency.symbol === 'SAFEMOON') {\n      checkForWarning(outputCurrency.symbol, 'Buying');\n    }\n  }, [onCurrencySelection, checkForWarning]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TokenWarningModal, {\n      isOpen: urlLoadedTokens.length > 0 && !dismissTokenWarning,\n      tokens: urlLoadedTokens,\n      onConfirm: handleConfirmTokenWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SyrupWarningModal, {\n      isOpen: transactionWarning.selectedToken === 'SYRUP',\n      transactionType: transactionWarning.purchaseType,\n      onConfirm: handleConfirmWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SafeMoonWarningModal, {\n      isOpen: transactionWarning.selectedToken === 'SAFEMOON',\n      onConfirm: handleConfirmWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBody, {\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        id: \"swap-page\",\n        children: [/*#__PURE__*/_jsxDEV(ConfirmSwapModal, {\n          isOpen: showConfirm,\n          trade: trade,\n          originalTrade: tradeToConfirm,\n          onAcceptChanges: handleAcceptChanges,\n          attemptingTxn: attemptingTxn,\n          txHash: txHash,\n          recipient: recipient,\n          allowedSlippage: allowedSlippage,\n          onConfirm: handleSwap,\n          swapErrorMessage: swapErrorMessage,\n          onDismiss: handleConfirmDismiss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PageHeader, {\n          title: TranslateString(8, 'Exchange'),\n          description: TranslateString(1192, 'Trade tokens in an instant')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              label: independentField === Field.OUTPUT && !showWrap && trade ? TranslateString(194, 'From (estimated)') : TranslateString(76, 'From'),\n              value: formattedAmounts[Field.INPUT],\n              showMaxButton: !atMaxAmountInput,\n              currency: currencies[Field.INPUT],\n              onUserInput: handleTypeInput,\n              onMax: handleMaxInput,\n              onCurrencySelect: handleInputSelect,\n              otherCurrency: currencies[Field.OUTPUT],\n              id: \"swap-currency-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n              justify: \"space-between\",\n              children: /*#__PURE__*/_jsxDEV(AutoRow, {\n                justify: isExpertMode ? 'space-between' : 'center',\n                style: {\n                  padding: '0 1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                  clickable: true,\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    variant: \"tertiary\",\n                    onClick: () => {\n                      setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n                      onSwitchTokens();\n                    },\n                    style: {\n                      borderRadius: '50%'\n                    },\n                    scale: \"sm\",\n                    children: /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n                      color: \"primary\",\n                      width: \"24px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 632,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 623,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 19\n                }, this), recipient === null && !showWrap && isExpertMode ? /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                  id: \"add-recipient-button\",\n                  onClick: () => onChangeRecipient(''),\n                  children: \"+ Add a send (optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              value: formattedAmounts[Field.OUTPUT],\n              onUserInput: handleTypeOutput,\n              label: independentField === Field.INPUT && !showWrap && trade ? TranslateString(196, 'To (estimated)') : TranslateString(80, 'To'),\n              showMaxButton: false,\n              currency: currencies[Field.OUTPUT],\n              onCurrencySelect: handleOutputSelect,\n              otherCurrency: currencies[Field.INPUT],\n              id: \"swap-currency-output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 15\n            }, this), recipient !== null && !showWrap ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                justify: \"space-between\",\n                style: {\n                  padding: '0 1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                  clickable: false,\n                  children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                    size: \"16\",\n                    color: theme.colors.textSubtle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                  id: \"remove-recipient-button\",\n                  onClick: () => onChangeRecipient(null),\n                  children: \"- Remove send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n                id: \"recipient\",\n                value: recipient,\n                onChange: onChangeRecipient\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : null, showWrap ? null : /*#__PURE__*/_jsxDEV(Card, {\n              padding: \".25rem .75rem 0 .75rem\",\n              borderRadius: \"20px\",\n              children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"4px\",\n                children: [Boolean(trade) && /*#__PURE__*/_jsxDEV(RowBetween, {\n                  align: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"14px\",\n                    children: TranslateString(1182, 'Price')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 676,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TradePrice, {\n                    price: trade === null || trade === void 0 ? void 0 : trade.executionPrice,\n                    showInverted: showInverted,\n                    setShowInverted: setShowInverted\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 677,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 23\n                }, this), allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && /*#__PURE__*/_jsxDEV(RowBetween, {\n                  align: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"14px\",\n                    children: TranslateString(88, 'Slippage Tolerance')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"14px\",\n                    children: [allowedSlippage / 100, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BottomGrouping, {\n            children: [!account ? /*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 17\n            }, this) : showWrap ? /*#__PURE__*/_jsxDEV(Button, {\n              disabled: Boolean(wrapInputError),\n              onClick: onWrap,\n              width: \"100%\",\n              children: wrapInputError !== null && wrapInputError !== void 0 ? wrapInputError : wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 17\n            }, this) : noRoute && userHasSpecifiedInputOutput ? /*#__PURE__*/_jsxDEV(GreyCard, {\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                mb: \"4px\",\n                children: TranslateString(1194, 'Insufficient liquidity for this trade.')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 17\n            }, this) : showApproveFlow ? /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: approveCallback,\n                disabled: approval !== ApprovalState.NOT_APPROVED || approvalSubmitted,\n                style: {\n                  width: '48%'\n                },\n                variant: approval === ApprovalState.APPROVED ? 'success' : 'primary',\n                children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(AutoRow, {\n                  gap: \"6px\",\n                  justify: \"center\",\n                  children: [\"Approving \", /*#__PURE__*/_jsxDEV(Loader, {\n                    stroke: \"white\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 716,\n                    columnNumber: 35\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 23\n                }, this) : approvalSubmitted && approval === ApprovalState.APPROVED ? 'Approved' : `Approve ${(_currencies$Field$INP = currencies[Field.INPUT]) === null || _currencies$Field$INP === void 0 ? void 0 : _currencies$Field$INP.symbol}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  if (isExpertMode) {\n                    handleSwap();\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      showConfirm: true,\n                      txHash: undefined\n                    });\n                  }\n                },\n                style: {\n                  width: '48%'\n                },\n                id: \"swap-button\",\n                disabled: !isValid || approval !== ApprovalState.APPROVED || priceImpactSeverity > 3 && !isExpertMode,\n                variant: isValid && priceImpactSeverity > 2 ? 'danger' : 'primary',\n                children: priceImpactSeverity > 3 && !isExpertMode ? `Price Impact High` : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 724,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                if (isExpertMode) {\n                  handleSwap();\n                } else {\n                  setSwapState({\n                    tradeToConfirm: trade,\n                    attemptingTxn: false,\n                    swapErrorMessage: undefined,\n                    showConfirm: true,\n                    txHash: undefined\n                  });\n                }\n              },\n              id: \"swap-button\",\n              disabled: !isValid || priceImpactSeverity > 3 && !isExpertMode || !!swapCallbackError,\n              variant: isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary',\n              width: \"100%\",\n              children: swapInputError || (priceImpactSeverity > 3 && !isExpertMode ? `Price Impact Too High` : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }, this), showApproveFlow && /*#__PURE__*/_jsxDEV(ProgressSteps, {\n              steps: [approval === ApprovalState.APPROVED]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 35\n            }, this), isExpertMode && swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n              error: swapErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 51\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AdvancedSwapDetailsDropdown, {\n      trade: trade\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Swap, \"EcPdmD1zyVIlbAOM8RYDFyn2BUQ=\", false, function () {\n  return [useDefaultsFromURLSearch, useI18n, useCurrency, useCurrency, useActiveWeb3React, useExpertModeManager, useUserDeadline, useUserSlippageTolerance, useSwapState, useDerivedSwapInfo, useWrapCallback, useSwapActionHandlers, useApproveCallbackFromTrade, useSwapCallback];\n});\n\n_c = Swap;\nexport default Swap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"sources":["/Users/smb/ZkSyncSwap/pancake-swap-interface-v1/src/pages/Swap/index.tsx"],"names":["JSBI","Token","React","useCallback","useContext","useEffect","useMemo","useState","ArrowDown","CardBody","ArrowDownIcon","Button","IconButton","Text","ThemeContext","AddressInputPanel","Card","GreyCard","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","CardNav","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","SwapCallbackError","Wrapper","TradePrice","TokenWarningModal","SyrupWarningModal","SafeMoonWarningModal","ProgressSteps","INITIAL_ALLOWED_SLIPPAGE","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallbackFromTrade","useSwapCallback","useWrapCallback","WrapType","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserDeadline","useUserSlippageTolerance","LinkStyledButton","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","Loader","useI18n","PageHeader","ConnectWalletButton","AppBody","Swap","loadedUrlParams","TranslateString","loadedInputCurrency","loadedOutputCurrency","inputCurrencyId","outputCurrencyId","dismissTokenWarning","setDismissTokenWarning","transactionWarning","setTransactionWarning","selectedToken","purchaseType","urlLoadedTokens","filter","c","handleConfirmTokenWarning","handleConfirmWarning","account","library","theme","isExpertMode","deadline","allowedSlippage","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","inputError","swapInputError","wrapType","execute","onWrap","wrapInputError","INPUT","OUTPUT","showWrap","NOT_APPLICABLE","trade","undefined","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","callback","swapCallback","error","swapCallbackError","priceImpactWithoutFee","handleSwap","prevState","then","hash","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","checkForWarning","selected","includes","handleInputSelect","inputCurrency","symbol","handleMaxInput","handleOutputSelect","outputCurrency","length","padding","borderRadius","colors","textSubtle","executionPrice","WRAP","UNWRAP","textAlign","width"],"mappings":"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","sourcesContent":["import { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap-libs/sdk'\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text } from '@pancakeswap-libs/uikit'\nimport { ThemeContext } from 'styled-components'\nimport AddressInputPanel from 'components/AddressInputPanel'\nimport Card, { GreyCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport CardNav from 'components/CardNav'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds'\nimport TradePrice from 'components/swap/TradePrice'\nimport TokenWarningModal from 'components/TokenWarningModal'\nimport SyrupWarningModal from 'components/SyrupWarningModal'\nimport SafeMoonWarningModal from 'components/SafeMoonWarningModal'\nimport ProgressSteps from 'components/ProgressSteps'\n\nimport { Contract } from 'ethers'\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\nimport { Field } from 'state/swap/actions'\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\nimport { LinkStyledButton } from 'components/Shared'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport Loader from 'components/Loader'\nimport useI18n from 'hooks/useI18n'\nimport PageHeader from 'components/PageHeader'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport AppBody from '../AppBody'\n\nconst Swap = () => {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n  const TranslateString = useI18n()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const [transactionWarning, setTransactionWarning] = useState<{\n    selectedToken: string | null\n    purchaseType: string | null\n  }>({\n    selectedToken: null,\n    purchaseType: null,\n  })\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  const handleConfirmWarning = () => {\n    setTransactionWarning({\n      selectedToken: null,\n      purchaseType: null,\n    })\n  }\n\n  const { account, library } = useActiveWeb3React()\n  // const provider = library?.getSigner()\n  // const CONTRACT_ADDRESS = '0xcF7140F19f38899b8A26Beeafc152D10D03af397' // masterchef contract\n  // const abict = [\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"string\",\n  //         \"name\": \"name_\",\n  //         \"type\": \"string\"\n  //       },\n  //       {\n  //         \"internalType\": \"string\",\n  //         \"name\": \"symbol_\",\n  //         \"type\": \"string\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"nonpayable\",\n  //     \"type\": \"constructor\"\n  //   },\n  //   {\n  //     \"anonymous\": false,\n  //     \"inputs\": [\n  //       {\n  //         \"indexed\": true,\n  //         \"internalType\": \"address\",\n  //         \"name\": \"owner\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"indexed\": true,\n  //         \"internalType\": \"address\",\n  //         \"name\": \"spender\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"indexed\": false,\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"value\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"Approval\",\n  //     \"type\": \"event\"\n  //   },\n  //   {\n  //     \"anonymous\": false,\n  //     \"inputs\": [\n  //       {\n  //         \"indexed\": true,\n  //         \"internalType\": \"address\",\n  //         \"name\": \"from\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"indexed\": true,\n  //         \"internalType\": \"address\",\n  //         \"name\": \"to\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"indexed\": false,\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"value\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"Transfer\",\n  //     \"type\": \"event\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"owner\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"spender\",\n  //         \"type\": \"address\"\n  //       }\n  //     ],\n  //     \"name\": \"allowance\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"view\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"spender\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"amount\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"approve\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"bool\",\n  //         \"name\": \"\",\n  //         \"type\": \"bool\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"nonpayable\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"account\",\n  //         \"type\": \"address\"\n  //       }\n  //     ],\n  //     \"name\": \"balanceOf\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"view\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [],\n  //     \"name\": \"decimals\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"uint8\",\n  //         \"name\": \"\",\n  //         \"type\": \"uint8\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"view\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"spender\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"subtractedValue\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"decreaseAllowance\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"bool\",\n  //         \"name\": \"\",\n  //         \"type\": \"bool\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"nonpayable\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"spender\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"addedValue\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"increaseAllowance\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"bool\",\n  //         \"name\": \"\",\n  //         \"type\": \"bool\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"nonpayable\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [],\n  //     \"name\": \"name\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"string\",\n  //         \"name\": \"\",\n  //         \"type\": \"string\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"view\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [],\n  //     \"name\": \"symbol\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"string\",\n  //         \"name\": \"\",\n  //         \"type\": \"string\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"view\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [],\n  //     \"name\": \"totalSupply\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"view\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"to\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"amount\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"transfer\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"bool\",\n  //         \"name\": \"\",\n  //         \"type\": \"bool\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"nonpayable\",\n  //     \"type\": \"function\"\n  //   },\n  //   {\n  //     \"inputs\": [\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"from\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"address\",\n  //         \"name\": \"to\",\n  //         \"type\": \"address\"\n  //       },\n  //       {\n  //         \"internalType\": \"uint256\",\n  //         \"name\": \"amount\",\n  //         \"type\": \"uint256\"\n  //       }\n  //     ],\n  //     \"name\": \"transferFrom\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"bool\",\n  //         \"name\": \"\",\n  //         \"type\": \"bool\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"nonpayable\",\n  //     \"type\": \"function\"\n  //   }\n  // ]\n  \n  // const contract_masterchef = new Contract(CONTRACT_ADDRESS, abict, provider)\n\n  // console.log(contract_masterchef.balanceOf(\"0x47e6d0DFA00637F35528ff28d371D6263f73B334\"))\n  const theme = useContext(ThemeContext)\n\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue\n  )\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    deadline,\n    recipient\n  )\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\n    swapCallback()\n      .then((hash) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          txHash: hash,\n        }))\n      })\n      .catch((error) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        }))\n      })\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\n\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [onUserInput, txHash, setSwapState])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\n  }, [trade])\n\n  // This will check to see if the user has selected Syrup or SafeMoon to either buy or sell.\n  // If so, they will be alerted with a warning message.\n  const checkForWarning = useCallback(\n    (selected: string, purchaseType: string) => {\n      if (['SYRUP', 'SAFEMOON'].includes(selected)) {\n        setTransactionWarning({\n          selectedToken: selected,\n          purchaseType,\n        })\n      }\n    },\n    [setTransactionWarning]\n  )\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      if (inputCurrency.symbol === 'SYRUP') {\n        checkForWarning(inputCurrency.symbol, 'Selling')\n      }\n      if (inputCurrency.symbol === 'SAFEMOON') {\n        checkForWarning(inputCurrency.symbol, 'Selling')\n      }\n    },\n    [onCurrencySelection, setApprovalSubmitted, checkForWarning]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      if (outputCurrency.symbol === 'SYRUP') {\n        checkForWarning(outputCurrency.symbol, 'Buying')\n      }\n      if (outputCurrency.symbol === 'SAFEMOON') {\n        checkForWarning(outputCurrency.symbol, 'Buying')\n      }\n    },\n    [onCurrencySelection, checkForWarning]\n  )\n\n  return (\n    <>\n      <TokenWarningModal\n        isOpen={urlLoadedTokens.length > 0 && !dismissTokenWarning}\n        tokens={urlLoadedTokens}\n        onConfirm={handleConfirmTokenWarning}\n      />\n      <SyrupWarningModal\n        isOpen={transactionWarning.selectedToken === 'SYRUP'}\n        transactionType={transactionWarning.purchaseType}\n        onConfirm={handleConfirmWarning}\n      />\n      <SafeMoonWarningModal isOpen={transactionWarning.selectedToken === 'SAFEMOON'} onConfirm={handleConfirmWarning} />\n      <CardNav />\n      <AppBody>\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n          <PageHeader\n            title={TranslateString(8, 'Exchange')}\n            description={TranslateString(1192, 'Trade tokens in an instant')}\n          />\n          <CardBody>\n            <AutoColumn gap=\"md\">\n              <CurrencyInputPanel\n                label={\n                  independentField === Field.OUTPUT && !showWrap && trade\n                    ? TranslateString(194, 'From (estimated)')\n                    : TranslateString(76, 'From')\n                }\n                value={formattedAmounts[Field.INPUT]}\n                showMaxButton={!atMaxAmountInput}\n                currency={currencies[Field.INPUT]}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies[Field.OUTPUT]}\n                id=\"swap-currency-input\"\n              />\n              <AutoColumn justify=\"space-between\">\n                <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable>\n                    <IconButton\n                      variant=\"tertiary\"\n                      onClick={() => {\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\n                        onSwitchTokens()\n                      }}\n                      style={{ borderRadius: '50%' }}\n                      scale=\"sm\"\n                    >\n                      <ArrowDownIcon color=\"primary\" width=\"24px\" />\n                    </IconButton>\n                  </ArrowWrapper>\n                  {recipient === null && !showWrap && isExpertMode ? (\n                    <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                      + Add a send (optional)\n                    </LinkStyledButton>\n                  ) : null}\n                </AutoRow>\n              </AutoColumn>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.OUTPUT]}\n                onUserInput={handleTypeOutput}\n                label={\n                  independentField === Field.INPUT && !showWrap && trade\n                    ? TranslateString(196, 'To (estimated)')\n                    : TranslateString(80, 'To')\n                }\n                showMaxButton={false}\n                currency={currencies[Field.OUTPUT]}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies[Field.INPUT]}\n                id=\"swap-currency-output\"\n              />\n\n              {recipient !== null && !showWrap ? (\n                <>\n                  <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                    <ArrowWrapper clickable={false}>\n                      <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                    </ArrowWrapper>\n                    <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                      - Remove send\n                    </LinkStyledButton>\n                  </AutoRow>\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                </>\n              ) : null}\n\n              {showWrap ? null : (\n                <Card padding=\".25rem .75rem 0 .75rem\" borderRadius=\"20px\">\n                  <AutoColumn gap=\"4px\">\n                    {Boolean(trade) && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">{TranslateString(1182, 'Price')}</Text>\n                        <TradePrice\n                          price={trade?.executionPrice}\n                          showInverted={showInverted}\n                          setShowInverted={setShowInverted}\n                        />\n                      </RowBetween>\n                    )}\n                    {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">{TranslateString(88, 'Slippage Tolerance')}</Text>\n                        <Text fontSize=\"14px\">{allowedSlippage / 100}%</Text>\n                      </RowBetween>\n                    )}\n                  </AutoColumn>\n                </Card>\n              )}\n            </AutoColumn>\n            <BottomGrouping>\n              {!account ? (\n                <ConnectWalletButton width=\"100%\" />\n              ) : showWrap ? (\n                <Button disabled={Boolean(wrapInputError)} onClick={onWrap} width=\"100%\">\n                  {wrapInputError ??\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n                </Button>\n              ) : noRoute && userHasSpecifiedInputOutput ? (\n                <GreyCard style={{ textAlign: 'center' }}>\n                  <Text mb=\"4px\">{TranslateString(1194, 'Insufficient liquidity for this trade.')}</Text>\n                </GreyCard>\n              ) : showApproveFlow ? (\n                <RowBetween>\n                  <Button\n                    onClick={approveCallback}\n                    disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                    style={{ width: '48%' }}\n                    variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  >\n                    {approval === ApprovalState.PENDING ? (\n                      <AutoRow gap=\"6px\" justify=\"center\">\n                        Approving <Loader stroke=\"white\" />\n                      </AutoRow>\n                    ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                      'Approved'\n                    ) : (\n                      `Approve ${currencies[Field.INPUT]?.symbol}`\n                    )}\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      if (isExpertMode) {\n                        handleSwap()\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined,\n                        })\n                      }\n                    }}\n                    style={{ width: '48%' }}\n                    id=\"swap-button\"\n                    disabled={\n                      !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                    }\n                    variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  >\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </Button>\n                </RowBetween>\n              ) : (\n                <Button\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      })\n                    }\n                  }}\n                  id=\"swap-button\"\n                  disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n                  variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                  width=\"100%\"\n                >\n                  {swapInputError ||\n                    (priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact Too High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)}\n                </Button>\n              )}\n              {showApproveFlow && <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />}\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n            </BottomGrouping>\n          </CardBody>\n        </Wrapper>\n      </AppBody>\n      <AdvancedSwapDetailsDropdown trade={trade} />\n    </>\n  )\n}\n\nexport default Swap\n"]},"metadata":{},"sourceType":"module"}